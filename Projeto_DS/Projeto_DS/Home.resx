<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>